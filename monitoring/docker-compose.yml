version: '3.7'

services:
  nginx-proxy:
   container_name: nginx
   image: jwilder/nginx-proxy
   ports:
    - "80:80"
    - "443:443"
   volumes:
    - "/etc/nginx/vhost.d"
    - "/usr/share/nginx/html"
    - "/var/run/docker.sock:/tmp/docker.sock:ro"
    - "./certs:/etc/nginx/certs"

  letsencrypt-nginx-proxy-companion:
   image: jrcs/letsencrypt-nginx-proxy-companion
   container_name: letsencrypt
   volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
   volumes_from:
    - "nginx-proxy"

  grafana:
    image: grafana/grafana
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
      - .env
    environment:
      - GRAFANA_VIRTUAL_PORT=${GRAFANA_VIRTUAL_PORT}
      - GRAFANA_VIRTUAL_HOST=${GRAFANA_VIRTUAL_HOST}
      - GRAFANA_LETSENCRYPT_HOST=${GRAFANA_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    env_file:
      - .env
    environment:
      - PROMETHEUS_VIRTUAL_PORT=${PROMETHEUS_VIRTUAL_PORT}
      - PROMETHEUS_VIRTUAL_HOST=${PROMETHEUS_VIRTUAL_HOST}
      - PROMETHEUS_LETSENCRYPT_HOST=${PROMETHEUS_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    env_file:
      - .env
    environment:
      - NODEEXP_VIRTUAL_PORT=${NODEEXP_VIRTUAL_PORT}
      - NODEEXP_VIRTUAL_HOST=${NODEEXP_VIRTUAL_HOST}
      - NODEEXP_LETSENCRYPT_HOST=${NODEEXP_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    env_file:
      - .env
    environment:
      - CADVISOR_VIRTUAL_PORT=${CADVISOR_VIRTUAL_PORT}
      - CADVISOR_VIRTUAL_HOST=${CADVISOR_VIRTUAL_HOST}
      - CADVISOR_LETSENCRYPT_HOST=${CADVISOR_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    env_file:
      - .env
    environment:
      - ALERTM_VIRTUAL_PORT=${ALERTM_VIRTUAL_PORT}
      - ALERTM_VIRTUAL_HOST=${ALERTM_VIRTUAL_HOST}
      - ALERTM_LETSENCRYPT_HOST=${ALERTM_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}


volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
 default:
  external:
    name: letsencrypt
